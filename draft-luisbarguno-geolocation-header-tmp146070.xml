<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.3 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>

<rfc ipr="trust200902" docName="draft-luisbarguno-geolocation-header" category="info">

  <front>
    <title abbrev="STuPiD">Geolocation Header for HTTP over a Secure Context</title>

    <author initials="K." surname="Hartke" fullname="Klaus Hartke">
      <organization>Universität Bremen TZI</organization>
      <address>
        <email>hartke@tzi.org</email>
      </address>
    </author>
    <author initials="C." surname="Bormann" fullname="Carsten Bormann">
      <organization>Universität Bremen TZI</organization>
      <address>
        <postal>
          <street>Postfach 330440</street>
          <city>Bremen</city>
          <code>D-28359</code>
          <country>Germany</country>
        </postal>
        <phone>+49-421-218-63921</phone>
        <facsimile>+49-421-218-7000</facsimile>
        <email>cabo@tzi.org</email>
      </address>
    </author>

    <date year="2009" month="July" day="05"/>

    <area>General</area>
    <workgroup>XMPP Working Group</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>NAT (Network Address Translator) Traversal may require TURN
(Traversal Using Relays around NAT) functionality in certain
cases that are not unlikely to occur.  There is little
incentive to deploy TURN servers, except by those who need
them — who may not be in a position to deploy a new protocol
on an Internet-connected node, in particular not one with
deployment requirements as high as those of TURN.</t>

<t>“STUN/TURN using PHP in Despair” is a highly deployable
protocol for obtaining TURN-like functionality, while also
providing the most important function of STUN.</t>



    </abstract>


  </front>

  <middle>


<section anchor="problems" title="Introduction">

<t>NAT (Network Address Translator) Traversal may require TURN
(Traversal Using Relays around NAT)
<xref target="I-D.ietf-behave-turn"/>
functionality in certain
cases that are not unlikely to occur.  There is little
incentive to deploy TURN servers, except by those who need
them — who may not be in a position to deploy a new protocol
on an Internet-connected node, in particular not one with
deployment requirements as high as those of TURN.</t>

<t>“STUN/TURN using PHP in Despair” is a highly deployable
protocol for obtaining TURN-like functionality, while also
providing the most important function of STUN
<xref target="RFC5389"/>.</t>

<t>The high degree of deployability is achieved by making STuPiD
a Web service, implementable in any Web application deployment
scheme.  As PHP appears to be the solution of choice for
avoiding deployment problems in the Web world, a PHP-based
sample implementation of STuPiD is presented in <xref target="figimpl"/> in <xref target="impl"/>.
(This single-page script has been tested with a free-of-charge
web hoster, so it should be deployable by literally everyone.)</t>

<section anchor="need" title="The Need for Standardization">

<t>If STuPiD is so easy to deploy, why standardize on it?
First of all, STuPiD server implementations will be done by
other people than the clients making use of the service.
Clearly communicating between these communities is a good
idea, in particular if there are security considerations.</t>

<t>Having one standard form of STuPiD service instead of one
specific to each kind of client also creates an incentive
for optimized implementations.</t>

<t>Finally, where STuPiD becomes part of a client standard
(such as a potential extension to XMPP’s in-band byte-stream
protocol as hinted in <xref target="xmpp"/>), it is a good
thing if STuPiD is already defined.</t>

<t>Hence, this document focuses on the definition of the STuPiD
service itself, tries to make this as general as possible
without increasing complexity or cost and leaves the details
of any client standards to future documents.</t>

</section>
</section>
<section anchor="ops" title="Basic Protocol Operation">

<t>The STuPiD protocol will typically be used with application
instances that first attempt to obtain connectivity using
mechanisms similar to those described in the STUN
specification <xref target="RFC5389"/>.  However, with STuPiD,
STUN is not really needed for TCP, as was demonstrated in
previous STUN-like implementations <xref target="STUNT"/>.
Instead, STuPiD (like <xref target="STUNT"/>) provides a
simple Web service that
echoes the remote address and port of an incoming HTTP
request; in most cases, this is enough to get the job done.</t>

<t>In case no connection can be established with this simple
STUN(T)-like mechanism, a TURN-like relay is needed as a final
fall-back.
The STuPiD protocol supports this, but solely provides a way
for the data to be
relayed.  STuPiD relies on an out-of-band channel to notify
the peer whenever new data is available (synchronization signal).
See <xref target="xmpp"/> for one likely example of such an
out-of-band channel.
(Note that the out-of-band channel may have a much lower
throughput than the STuPiD relay channel — this is exactly
the case in the example provided in <xref target="xmpp"/>,
where the out-of-band channel is typically throughput-limited
to on the order of a few kilobits per second.)</t>

<t>By designing the STuPiD web service in such a way that it can
be implemented by a simple PHP script such as that presented
in <xref target="impl"/>, it is easy to deploy by those who
need the STuPiD services.
The combination of the low-throughput out-of-band channel for
synchronization and the STuPiD web service for bulk data
relaying is somewhat silly but gets the job done.</t>

<t>The STuPiD data relay is implemented as follows (see <xref target="figops"/>):</t>

<t><list style="numbers">
  <t>Peer A, the source of the data to be relayed, stores a chunk of
data at the STuPiD server using an opaque identifier, the “chunk
identifier”. How that chunk identifier is chosen is local to Peer
A; it could be composed of a random session id and a sequence number.</t>
  <t>Peer A notifies the receiver of the data, Peer
B, that a new data chunk is available, specifying the URI needed
for retrieval.
This notification is provided through an out-out-band channel.
(As an optimization for multiple consecutive transfers, A might
inform B once of a constant prefix of that URI and only send a
varying part such as a sequence number in each notification —
this is something to be decided in the client-client notification
protocol.)</t>
  <t>Peer B retrieves the data from the STuPiD server using the URI
provided by Peer A.</t>
</list></t>

<t>Note that the data transfer mechanism is one-way, i.e. to send
data in the other direction as well, Peer B needs to perform
the same steps using a STuPiD server at the same or a
different location.</t>

<figure title="STuPiD Protocol Operation" anchor="figops"><artwork><![CDATA[

        STuPiD   ```````````````````````````````,
        Script   <----------------------------. ,
                                              | ,
          ^ ,                                 | ,
          | ,                                 | ,
    (1)   | ,                                 | ,  (3)
    POST  | ,                                 | ,  GET
          | ,                                 | ,
          | v                                 | v

        Peer A   ----------------------->   Peer B
                           (2)
                       out-of-band
                       Notification
]]></artwork></figure>

</section>
<section anchor="protocol-definition" title="Protocol Definition">

<section anchor="Terminology" title="Terminology">
<t>In this document, the key words “MUST”, “MUST NOT”, “REQUIRED”,
“SHALL”, “SHALL NOT”, “SHOULD”, “SHOULD NOT”, “RECOMMENDED”, “MAY”,
and “OPTIONAL” are to be interpreted as described in BCP 14, RFC 2119
<xref target="RFC2119"/> and indicate requirement levels for compliant STuPiD
implementations.</t>

</section>
<section anchor="discovering-external-ip-address-and-port" title="Discovering External IP Address and Port">

<t>A client may discover its external IP address and the port
required for port prediction by performing a HTTP GET
request to a STuPiD server. The STuPiD server MUST reply
with the remote address and remote port in the following
format:</t>

<t>host “:” port</t>

<t>where ‘host’ and ‘port’ are defined as in <xref target="RFC3986"/>.</t>

</section>
<section anchor="storing-data" title="Storing Data">

<t>Data chunks are stored using the POST request of HTTP. The
STuPiD server MUST support one URI parameter which is passed
as query-string:</t>

<t>‘chid’:  A unique ID identifying the data chunk to be stored.
The ID SHOULD be chosen from the characters of the base64url
set <xref target="RFC4648"/>.</t>

<t>The payload of the POST request MUST be the data to be
stored. The ‘Content-Type’ SHOULD be
‘application/octet-stream’, although a STuPiD server
implementation SHOULD simply ignore the ‘Content-Type’ as a
client implementation may be restricted and may not able to
specify a specific ‘Content-Type’.  (E.g., in certain cases,
the peer may be limited to sending the data as
multipart-form-encoded — still, the data is stored as a
byte stream.)</t>

<t>STuPiD servers may reject data chunks that are larger than
some predefined limit.
This maximum size in bytes of each data chunk is RECOMMENDED
to be 65536 or more.</t>

<t>As HTTP already provides data transparency,
the data chunk SHOULD NOT be encoded using Base64 or any
other data transparency mechanism; in any case, the STuPiD
server will not attempt to decode the chunk.</t>

<t>The sender MUST wait for the HTTP response before
going on to notify the receiver.</t>

</section>
<section anchor="notification" title="Notification">

<t>The sender notifies the receiver of the data chunk by passing
via an out-of-band channel (which is not part of the STuPiD
protocol):</t>

<t>The full URL from which the data chunk can be retrieved,
i.e. the same URL that was used to store the data chunk,
including the chunk ID parameter.</t>

<t>The exact notification mechanism over the out-of-band channel
and the definition of a session is dependent on the
out-of-band channel.  See <xref target="xmpp"/> for one
example of such an out-of-band channel.</t>

</section>
<section anchor="retrieving-data" title="Retrieving Data">

<t>The notified peer retrieves the data chunk using a GET request
with the URL supplied by the sender. The STuPiD server MUST
set the ‘Content-Type’ of the returned body to
‘application/octet-stream’.</t>

</section>
</section>
<section anchor="implementation-notes" title="Implementation Notes">

<t>A STuPiD server implementation SHOULD delete stored data some
time after it was stored. It is RECOMMENDED not to delete the
data before five minutes have elapsed after it was stored.
Different client protocols will have different reactions to
data that have been deleted prematurely and cannot be
retrieved by the notified peer; this may be as trivial as
packet loss or it may cause a reliable byte-stream to fail
(<xref target="impl"/>).
(TODO: It may be useful to provide some hints in the storing
POST request.)</t>

<t>STuPiD clients should aggregate data in order to minimize the
number of requests to the STuPiD server per second.
The specific aggregation method chosen depends on the data
rate required (and the maximum chunk size), the latency
requirements, and the application semantics.</t>

<t>Clearly, it is up to the implementation to decide how the data
chunks are actually stored.  A sufficiently silly STuPiD server
implementation might for instance use a MySQL database.</t>

</section>
<section anchor="security-considerations" title="Security Considerations">

<t>The security objectives of STuPiD are to be as secure as if
NAT traversal had succeeded, i.e., an on-path attacker can
overhear and fake messages, but an off-path attacker cannot.
If a higher level of security is desired, it should be
provided on top of the data relayed by STuPiD, e.g. by using
XTLS <xref target="I-D.meyer-xmpp-e2e-encryption"/>.</t>

<t>Much of the security of STuPiD is based on the assumption that
an off-path attacker cannot guess the chunk identifiers.  A
suitable source of randomness <xref target="RFC4086"/> should
be used to generate at least a sufficiently large part of the
chunk identifiers (e.g., the chunk identifier could be a hard
to guess prefix followed by a serial number).</t>

<t>To protect the STuPiD server against denial of service and
possibly some forms of theft of service, it is RECOMMENDED
that the POST side of the STuPiD server be protected by some
form of authentication such as HTTP authentication.  There is
little need to protect the GET side.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>





<reference  anchor="RFC2119" target='http://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='S. Bradner'><organization /></author>
<date year='1997' month='March' />
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference  anchor="RFC3986" target='http://www.rfc-editor.org/info/rfc3986'>
<front>
<title>Uniform Resource Identifier (URI): Generic Syntax</title>
<author initials='T.' surname='Berners-Lee' fullname='T. Berners-Lee'><organization /></author>
<author initials='R.' surname='Fielding' fullname='R. Fielding'><organization /></author>
<author initials='L.' surname='Masinter' fullname='L. Masinter'><organization /></author>
<date year='2005' month='January' />
<abstract><t>A Uniform Resource Identifier (URI) is a compact sequence of characters that identifies an abstract or physical resource.  This specification defines the generic URI syntax and a process for resolving URI references that might be in relative form, along with guidelines and security considerations for the use of URIs on the Internet.  The URI syntax defines a grammar that is a superset of all valid URIs, allowing an implementation to parse the common components of a URI reference without knowing the scheme-specific requirements of every possible identifier.  This specification does not define a generative grammar for URIs; that task is performed by the individual specifications of each URI scheme.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='STD' value='66'/>
<seriesInfo name='RFC' value='3986'/>
<seriesInfo name='DOI' value='10.17487/RFC3986'/>
</reference>



<reference  anchor="RFC4086" target='http://www.rfc-editor.org/info/rfc4086'>
<front>
<title>Randomness Requirements for Security</title>
<author initials='D.' surname='Eastlake 3rd' fullname='D. Eastlake 3rd'><organization /></author>
<author initials='J.' surname='Schiller' fullname='J. Schiller'><organization /></author>
<author initials='S.' surname='Crocker' fullname='S. Crocker'><organization /></author>
<date year='2005' month='June' />
<abstract><t>Security systems are built on strong cryptographic algorithms that foil pattern analysis attempts.  However, the security of these systems is dependent on generating secret quantities for passwords, cryptographic keys, and similar quantities.  The use of pseudo-random processes to generate secret quantities can result in pseudo-security. A sophisticated attacker may find it easier to reproduce the environment that produced the secret quantities and to search the resulting small set of possibilities than to locate the quantities in the whole of the potential number space.</t><t>Choosing random quantities to foil a resourceful and motivated adversary is surprisingly difficult.  This document points out many pitfalls in using poor entropy sources or traditional pseudo-random number generation techniques for generating such quantities.  It recommends the use of truly random hardware techniques and shows that the existing hardware on many systems can be used for this purpose. It provides suggestions to ameliorate the problem when a hardware solution is not available, and it gives examples of how large such quantities need to be for some applications.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='106'/>
<seriesInfo name='RFC' value='4086'/>
<seriesInfo name='DOI' value='10.17487/RFC4086'/>
</reference>



<reference  anchor="RFC4648" target='http://www.rfc-editor.org/info/rfc4648'>
<front>
<title>The Base16, Base32, and Base64 Data Encodings</title>
<author initials='S.' surname='Josefsson' fullname='S. Josefsson'><organization /></author>
<date year='2006' month='October' />
<abstract><t>This document describes the commonly used base 64, base 32, and base 16 encoding schemes.  It also discusses the use of line-feeds in encoded data, use of padding in encoded data, use of non-alphabet characters in encoded data, use of different encoding alphabets, and canonical encodings.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='4648'/>
<seriesInfo name='DOI' value='10.17487/RFC4648'/>
</reference>




    </references>

    <references title='Informative References'>





<reference  anchor="RFC5389" target='http://www.rfc-editor.org/info/rfc5389'>
<front>
<title>Session Traversal Utilities for NAT (STUN)</title>
<author initials='J.' surname='Rosenberg' fullname='J. Rosenberg'><organization /></author>
<author initials='R.' surname='Mahy' fullname='R. Mahy'><organization /></author>
<author initials='P.' surname='Matthews' fullname='P. Matthews'><organization /></author>
<author initials='D.' surname='Wing' fullname='D. Wing'><organization /></author>
<date year='2008' month='October' />
<abstract><t>Session Traversal Utilities for NAT (STUN) is a protocol that serves as a tool for other protocols in dealing with Network Address Translator (NAT) traversal.  It can be used by an endpoint to determine the IP address and port allocated to it by a NAT.  It can also be used to check connectivity between two endpoints, and as a keep-alive protocol to maintain NAT bindings.  STUN works with many existing NATs, and does not require any special behavior from them.</t><t>STUN is not a NAT traversal solution by itself.  Rather, it is a tool to be used in the context of a NAT traversal solution.  This is an important change from the previous version of this specification (RFC 3489), which presented STUN as a complete solution.</t><t>This document obsoletes RFC 3489.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='5389'/>
<seriesInfo name='DOI' value='10.17487/RFC5389'/>
</reference>



<reference anchor="I-D.ietf-behave-turn">
<front>
<title>Traversal Using Relays around NAT (TURN): Relay Extensions to Session Traversal Utilities for NAT (STUN)</title>

<author initials='J' surname='Rosenberg' fullname='Jonathan Rosenberg'>
    <organization />
</author>

<author initials='R' surname='Mahy' fullname='Rohan Mahy'>
    <organization />
</author>

<author initials='P' surname='Matthews' fullname='Philip Matthews'>
    <organization />
</author>

<date month='July' day='3' year='2009' />

<abstract><t>If a host is located behind a NAT, then in certain situations it can be impossible for that host to communicate directly with other hosts (peers).  In these situations, it is necessary for the host to use the services of an intermediate node that acts as a communication relay.  This specification defines a protocol, called TURN (Traversal Using Relays around NAT), that allows the host to control the operation of the relay and to exchange packets with its peers using the relay.  TURN differs from some other relay control protocols in that it allows a client to communicate with multiple peers using a single relay address.  The TURN protocol was designed to be used as part of the ICE (Interactive Connectivity Establishment) approach to NAT traversal, though it can be also used without ICE.</t></abstract>

</front>

<seriesInfo name='Internet-Draft' value='draft-ietf-behave-turn-16' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-ietf-behave-turn-16.txt' />
</reference>


<reference anchor="STUNT" target="http://deusty.blogspot.com/2007/09/stunt-out-of-band-channels.html">
  <front>
    <title>STUNT &amp; out-of-band channels</title>
    <author initials="R." surname="Hanson" fullname="Robbie Hanson">
      <organization></organization>
    </author>
    <date year="2007" month="September" day="17"/>
  </front>
</reference>




<reference anchor="I-D.meyer-xmpp-e2e-encryption">
<front>
<title>XTLS: End-to-End Encryption for the Extensible Messaging and Presence Protocol (XMPP) Using Transport Layer Security (TLS)</title>

<author initials='D' surname='Meyer' fullname='Dirk Meyer'>
    <organization />
</author>

<author initials='P' surname='Saint-Andre' fullname='Peter Saint-Andre'>
    <organization />
</author>

<date month='June' day='29' year='2009' />

<abstract><t>This document specifies "XTLS", a protocol for end-to-end encryption of Extensible Messaging and Presence Protocol (XMPP) traffic.  XTLS is an application-level usage of Transport Layer Security (TLS) that is set up using the XMPP Jingle extension for session negotiation and transported using any streaming transport as the data delivery mechanism.  Thus XTLS treats the end-to-end exchange of XML stanzas as a virtual transport and uses TLS to secure that transport, enabling XMPP entities to communicate in a way that is designed to ensure the confidentiality and integrity XML stanzas.  The protocol can be used for secure end-to-end messaging as well as other XMPP applications, such as file transfer.</t></abstract>

</front>

<seriesInfo name='Internet-Draft' value='draft-meyer-xmpp-e2e-encryption-02' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-meyer-xmpp-e2e-encryption-02.txt' />
</reference>



<reference anchor="I-D.ietf-xmpp-3920bis">
<front>
<title>Extensible Messaging and Presence Protocol (XMPP): Core</title>

<author initials='P' surname='Saint-Andre' fullname='Peter Saint-Andre'>
    <organization />
</author>

<date month='December' day='20' year='2010' />

<abstract><t>The Extensible Messaging and Presence Protocol (XMPP) is an application profile of the Extensible Markup Language (XML) that enables the near-real-time exchange of structured yet extensible data between any two or more network entities.  This document defines XMPP's core protocol methods: setup and teardown of XML streams, channel encryption, authentication, error handling, and communication primitives for messaging, network availability ("presence"), and request-response interactions.  This document obsoletes RFC 3920.</t></abstract>

</front>

<seriesInfo name='Internet-Draft' value='draft-ietf-xmpp-3920bis-22' />
<format type='TXT'
        target='http://www.ietf.org/internet-drafts/draft-ietf-xmpp-3920bis-22.txt' />
</reference>




    </references>


<section anchor="xmp" title="Examples">

<t>This appendix provides some examples of the STuPiD protocol operation.</t>

<figure title="Discovering External IP Address and Port" anchor="figxmpdisco"><artwork><![CDATA[
   Request:

      GET /stupid.php HTTP/1.0
      User-Agent: Example/1.11.4
      Accept: */*
      Host: example.org
      Connection: Keep-Alive

   Response:

      HTTP/1.1 200 OK
      Date: Sun, 05 Jul 2009 00:30:37 GMT
      Server: Apache/2.2
      Cache-Control: no-cache, must-revalidate
      Expires: Sat, 26 Jul 1997 05:00:00 GMT
      Vary: Accept-Encoding
      Content-Length: 17
      Keep-Alive: timeout=1, max=400
      Connection: Keep-Alive
      Content-Type: application/octet-stream

      192.0.2.239:36654
]]></artwork></figure>

<figure title="Storing Data" anchor="figxmpstore"><artwork><![CDATA[
   Request:

      POST /stupid.php?chid=i781hf64-0 HTTP/1.0
      User-Agent: Example/1.11.4
      Accept: */*
      Host: example.org
      Connection: Keep-Alive
      Content-Type: application/octet-stream
      Content-Length: 11

      Hello World

   Response:

      HTTP/1.1 200 OK
      Date: Sun, 05 Jul 2009 00:20:34 GMT
      Server: Apache/2.2
      Cache-Control: no-cache, must-revalidate
      Expires: Sat, 26 Jul 1997 05:00:00 GMT
      Vary: Accept-Encoding
      Content-Length: 0
      Keep-Alive: timeout=1, max=400
      Connection: Keep-Alive
      Content-Type: application/octet-stream
]]></artwork></figure>

<figure title="Retrieving Data" anchor="figxmpretr"><artwork><![CDATA[
   Request:

      GET /stupid.php?chid=i781hf64-0 HTTP/1.0
      User-Agent: Example/1.11.4
      Accept: */*
      Host: example.org
      Connection: Keep-Alive

   Response:

      HTTP/1.1 200 OK
      Date: Sun, 05 Jul 2009 00:21:29 GMT
      Server: Apache/2.2
      Cache-Control: no-cache, must-revalidate
      Expires: Sat, 26 Jul 1997 05:00:00 GMT
      Vary: Accept-Encoding
      Content-Length: 11
      Keep-Alive: timeout=1, max=400
      Connection: Keep-Alive
      Content-Type: application/octet-stream

      Hello World
]]></artwork></figure>

</section>
<section anchor="impl" title="Sample Implementation">

<figure title="STuPiD Sample Implementation" anchor="figimpl"><artwork><![CDATA[
<?php
header("Cache-Control: no-cache, must-revalidate");
header("Expires: Sat, 26 Jul 1997 05:00:00 GMT");
header("Content-Type: application/octet-stream");

mysql_connect(localhost, "username", "password");
mysql_select_db("stupid");

$chid = mysql_real_escape_string($_GET["chid"]);

if ($_SERVER["REQUEST_METHOD"] == "GET") {
   if (empty($chid)) {
      echo $_SERVER["REMOTE_ADDR"] . ":" . $_SERVER["REMOTE_PORT"];
   } elseif ($result = mysql_query("SELECT `data` FROM `Data` " .
                         "WHERE `chid` = '$chid'")) {
      if ($row = mysql_fetch_array($result, MYSQL_ASSOC)) {
         echo base64_decode($row["data"]);
      } else {
         header("HTTP/1.0 404 Not Found");
      }
      mysql_free_result($result);
   } else {
      header("HTTP/1.0 404 Not Found");
   }
} elseif ($_SERVER["REQUEST_METHOD"] == "POST") {
   if (empty($chid)) {
      header("HTTP/1.0 404 Not Found");
   } else {
      mysql_query("DELETE FROM `Data` " .
                  "WHERE `timestamp` < DATE_SUB(NOW(), INTERVAL 5 MINUTE)");
      $data = base64_encode(file_get_contents("php://input"));
      if (!mysql_query("INSERT INTO `Data` (`chid`, `data`) " .
                       "VALUES ('$chid', '$data')")) {
         header("HTTP/1.0 403 Bad Request");
      }
   }
} else {
   header("HTTP/1.0 405 Method Not Allowed");
   header("Allow: GET, HEAD, POST");
}
mysql_close();
?>
]]></artwork></figure>

</section>
<section anchor="xmpp" title="Using XMPP as Out-Of-Band Channel">

<t>XMPP <xref target="I-D.ietf-xmpp-3920bis"/> is a good choice for
an out-of-band channel.</t>

<t>The notification protocol is closely modeled after XMPP’s
In-Band Bytestreams (IBB, see
http://xmpp.org/extensions/xep-0047.html). Just replace the
namespace and insert the STuPiD Retrieval URI instead of the
actual Base64 encoded data, see <xref target="figxmpnots"/>.
(Note that the current proposal redundantly sends a sid and a
seq as well as the chid composed of these two; it may be
possible to optimize this, possibly sending the constant prefix
of the URI once at bytestream creation time.)</t>

<t>Notifications MUST be processed in the order they are
received. If an out-of-sequence notification is received for a
particular session (determined by checking the ‘seq’ attribute),
then this indicates that a notification has been lost. The
recipient MUST NOT process such an out-of-sequence notification,
nor any that follow it within the same session; instead, the
recipient MUST consider the session invalid.  (Adapted from
http://xmpp.org/extensions/xep-0047.html#send)</t>

<t>Of course, other methods can be used for setup and teardown, such as Jingle
(see http://xmpp.org/extensions/xep-0261.html).</t>

<figure title="Creating a Bytestream: Initiator requests session" anchor="figxmpcri"><artwork><![CDATA[
      <iq from='romeo@montague.net/orchard'
          id='jn3h8g65'
          to='juliet@capulet.com/balcony'
          type='set'>
        <open xmlns='urn:xmpp:tmp:stupid'
              block-size='65536'
              sid='i781hf64'
              stanza='iq'/>
      </iq>
]]></artwork></figure>

<figure title="Creating a Bytestream: Responder accepts session" anchor="figxmpcrr"><artwork><![CDATA[
      <iq from='juliet@capulet.com/balcony'
          id='jn3h8g65'
          to='romeo@montague.net/orchard'
          type='result'/>
]]></artwork></figure>

<figure title="Sending Notifications: Notification in an IQ stanza" anchor="figxmpnots"><artwork><![CDATA[
      <iq from='romeo@montague.net/orchard'
          id='kr91n475'
          to='juliet@capulet.com/balcony'
          type='set'>
        <data xmlns='urn:xmpp:tmp:stupid'
              seq='0'
              sid='i781hf64'
              url='http://example.org/stupid.php?chid=i781hf64-0'/>
      </iq>
]]></artwork></figure>

<figure title="Sending Notifications: Acknowledging notification using IQ" anchor="figxmpnota"><artwork><![CDATA[
      <iq from='juliet@capulet.com/balcony'
          id='kr91n475'
          to='romeo@montague.net/orchard'
          type='result'/>
]]></artwork></figure>

<figure title="Closing the Bytestream: Request" anchor="figxmpclor"><artwork><![CDATA[
      <iq from='romeo@montague.net/orchard'
          id='us71g45j'
          to='juliet@capulet.com/balcony'
          type='set'>
        <close xmlns='urn:xmpp:tmp:stupid'
               sid='i781hf64'/>
      </iq>
]]></artwork></figure>

<figure title="Closing the Bytestream: Success response" anchor="figxmpclos"><artwork><![CDATA[
      <iq from='juliet@capulet.com/balcony'
          id='us71g45j'
          to='romeo@montague.net/orchard'
          type='result'/>
]]></artwork></figure>

</section>


  </back>

<!-- ##markdown-source:
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
tq7Y+czz6h4S+fsf++Ge9btHAAA=

-->

</rfc>

